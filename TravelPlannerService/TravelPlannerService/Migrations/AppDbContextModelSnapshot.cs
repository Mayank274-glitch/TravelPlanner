// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlannerService.DbContextCreate;

#nullable disable

namespace TravelPlannerService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelPlannerService.Models.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Itineraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 1, 16, 19, 45, 36, 401, DateTimeKind.Local).AddTicks(6157),
                            Title = "Itinerary 1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 1, 17, 19, 45, 36, 401, DateTimeKind.Local).AddTicks(6159),
                            Title = "Itinerary 2"
                        });
                });

            modelBuilder.Entity("TravelPlannerService.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content 1",
                            Date = new DateTime(2024, 1, 16, 19, 45, 36, 401, DateTimeKind.Local).AddTicks(6116),
                            Title = "Note 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content 2",
                            Date = new DateTime(2024, 1, 16, 19, 45, 36, 401, DateTimeKind.Local).AddTicks(6128),
                            Title = "Note 2"
                        });
                });

            modelBuilder.Entity("TravelPlannerService.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GooglePlaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address 1",
                            GooglePlaceId = "google_place_id_1",
                            Name = "Place 1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Address 2",
                            GooglePlaceId = "google_place_id_2",
                            Name = "Place 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
